from importt import *# import pyxl_io as xlimport csvfile_io as wbasync def start_command(update, context):    """Send a message when the command /start is issued."""    user = update.effective_user    await update.message.reply_html(        rf"Hi {user.mention_html()}!",        reply_markup=ForceReply(selective=True),    )async def help_command(update, context):    """Send a message when the command /start is issued."""    await update.message.reply_text(        "[buy/sell] [bk/bh] coin size@price\ntradeinfo\nfetchrealtimedata\n"        # "what happens, if the button data is not available. "    )async def cmn_command(update, context):    """Send a message when the command /start is issued."""    await update.message.reply_text(        "User Not Subscribed. "        "Contact admin."    )# async def trade_command(update, context):#     """Send a message when the command /start is issued."""#     # print("trade")#     log_trade_history(update.message.text)#     await update.message.reply_text(update.message.text)async def msg_read(update, context):    """Send an echo message."""    # print(update.message.text)    await update.message.reply_text(wb.handle_msg(update.message.text))    # await update.message.reply_text(update.message.text)def error(update,context):    print(f"Update {update} caused error {context.error}")def main():    """Start the bot."""    # Create the Application and pass it your bot's token.    application = Application.builder().token(TOKEN).build()    # on different commands - answer in Telegram    application.add_handler(CommandHandler("start", start_command))    application.add_handler(CommandHandler("help", help_command))    application.add_handler(CommandHandler("buy", cmn_command))    application.add_handler(CommandHandler("sell", cmn_command))    application.add_handler(CommandHandler("tradeinfo", cmn_command))    application.add_handler(CommandHandler("tradesupby", cmn_command))    application.add_handler(CommandHandler("single_cmds", cmn_command))    application.add_handler(CommandHandler("setremarks", cmn_command))    # application.add_handler(CommandHandler("trade", trade_command))    # on non command i.e message - echo the message on Telegram    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, msg_read))    # Run the bot until the user presses Ctrl-C    application.run_polling(allowed_updates=Update.ALL_TYPES)if __name__ == "__main__":    main()